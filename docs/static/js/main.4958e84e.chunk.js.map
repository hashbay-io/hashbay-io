{"version":3,"sources":["pages/home/styles.module.css","assets/logo_2x.png","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","timer","web3","contracts","HomePage","state","account","contractName","balance","symbol","start","end","reward","initPageData","getAccount","getContractName","getSymbol","getDate","pageListen","clearInterval","setInterval","getReward","a","props","eth","getAccounts","accounts","length","console","log","getBalance","setState","methods","call","then","balanceOf","res","utils","fromWei","startDate","startDateTime","endDate","endDateTime","myReward","from","getTimeSchedule","startTime","Date","getTime","endTime","toFixed","handleClickClaim","claim","send","e","renderAccount","className","styles","substring","renderTimeFormat","prefix","timestamp","dateArr","toString","split","this","ethereum","window","on","nowLeft","home","header","src","require","alt","content","node","success","token","timeline","parseInt","now","style","left","fill","width","btns","onClick","disabled","qa","qa__q","qa__a","React","PureComponent","App","enable","Web3","givenProvider","HashBay","Contract","HashBayAbi","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,QAAU,wBAAwB,QAAU,wBAAwB,KAAO,qBAAqB,QAAU,wBAAwB,SAAW,yBAAyB,MAAQ,sBAAsB,IAAM,oBAAoB,IAAM,oBAAoB,KAAO,qBAAqB,KAAO,qBAAqB,GAAK,mBAAmB,MAAQ,sBAAsB,MAAQ,wB,igMCD5bD,EAAOC,QAAU,IAA0B,qC,kECIvCC,ECGAC,EAAMC,E,6IDmPKC,E,4MAlPbC,MAAQ,CACNC,QAAS,GACTC,aAAc,GAEdC,QAAS,GACTC,OAAQ,GAERC,MAAO,GACPC,IAAK,GAELC,OAAQ,I,EAqBVC,aAAe,WACb,EAAKC,aACL,EAAKC,kBACL,EAAKC,YACL,EAAKC,W,EAIPC,WAAa,SAACZ,GACZa,cAAclB,GAEdA,EAAQmB,aAAY,WAClB,EAAKC,UAAUf,KACd,O,EAILQ,W,sBAAa,gCAAAQ,EAAA,6DACHpB,EAAS,EAAKqB,MAAdrB,KADG,SAGQA,EAAKsB,IAAIC,cAHjB,aAGTC,EAHS,QAIDC,QAAU,GAJT,uBAKZC,QAAQC,IAAI,wCALA,0BAQLvB,EAAUoB,EAAS,GACzB,EAAKI,WAAWxB,GAChB,EAAKe,UAAUf,GACf,EAAKyB,SAAS,CACZzB,YACC,WACD,EAAKY,WAAWZ,MAdP,4C,EAmBbS,gB,sBAAkB,sBAAAO,EAAA,sDACM,EAAKC,MAAnBpB,UACC,QAAY6B,QAAQzB,eAAe0B,OAAOC,MAAK,SAAC3B,GACvD,EAAKwB,SAAS,CACZxB,oBAJY,2C,EAUlBuB,W,uCAAa,WAAOxB,GAAP,qBAAAgB,EAAA,+DACiB,EAAKC,MAAzBrB,EADG,EACHA,KAAMC,EADH,EACGA,UADH,SAEOA,EAAS,QAAY6B,QAAQG,UAAU7B,GAAS2B,OAFvD,OAELG,EAFK,OAGX,EAAKL,SAAS,CACZvB,QAASN,EAAKmC,MAAMC,QAAQF,EAAK,UAJxB,2C,wDASbpB,U,sBAAY,8BAAAM,EAAA,6DACFnB,EAAc,EAAKoB,MAAnBpB,UADE,SAEWA,EAAS,QAAY6B,QAAQvB,SAASwB,OAFjD,OAEJxB,EAFI,OAGV,EAAKsB,SAAS,CACZtB,WAJQ,2C,EASZQ,Q,sBAAU,gCAAAK,EAAA,6DACAnB,EAAc,EAAKoB,MAAnBpB,UADA,SAEkBA,EAAS,QAAY6B,QAAQO,YAAYN,OAF3D,cAEJO,EAFI,gBAGgBrC,EAAS,QAAY6B,QAAQS,UAAUR,OAHvD,OAGJS,EAHI,OAIR,EAAKX,SAAS,CACZrB,MAAwB,KAAhB8B,EACR7B,IAAoB,KAAd+B,IANA,2C,EAWVrB,U,uCAAY,WAAOf,GAAP,SAAAgB,EAAA,sDACY,EAAKC,MAAnBpB,UACC,QAAY6B,QAAQW,WAAWV,KAAK,CAC3CW,KAAMtC,IACL4B,MAAK,SAACtB,GACP,EAAKmB,SAAS,CACZnB,cANM,2C,wDAYZiC,gBAAkB,WAAO,IAAD,EACC,EAAKxC,MAApBK,EADc,EACdA,MAAOC,EADO,EACPA,IACf,IAAKD,IAAUC,EAAO,OAAO,KAC7B,IAAMmC,EAAY,IAAIC,KAAKrC,GAAOsC,UAC5BC,EAAU,IAAIF,KAAKpC,GAAKqC,UAG9B,UAFgB,IAAID,MAAOC,UACCF,IAAcG,EAAUH,GAAa,KAAKI,QAAQ,I,EAKhFC,iB,sBAAmB,8BAAA7B,EAAA,sDACTnB,EAAc,EAAKoB,MAAnBpB,UACAG,EAAY,EAAKD,MAAjBC,QACR,IACEH,EAAS,QAAY6B,QAAQoB,QAAQC,KAAK,CACxCT,KAAMtC,IACL4B,MAAK,SAACE,GACP,EAAKvB,kBAEP,MAAOyC,GACP1B,QAAQC,IAAIyB,GAVG,2C,EAenBC,cAAgB,WAAO,IACbjD,EAAY,EAAKD,MAAjBC,QACR,OACE,yBAAKkD,UAAWC,IAAOnD,SAAvB,UACMA,EAAQoD,UAAU,EAAG,IAD3B,cACoCpD,EAAQoD,UAAUpD,EAAQqB,OAAS,O,EAM3EgC,iBAAmB,SAACC,EAAQC,GAC1B,IAAKA,EAAa,OAAO,KACzB,IACIC,EADO,IAAIf,KAAKc,GAAWE,WACZC,MAAM,KACzB,MAAM,GAAN,OAAUJ,EAAV,aAAqBE,EAAQ,GAA7B,YAAmCA,EAAQ,K,kEAjJxB,IAAD,OAClBG,KAAKpD,eADa,IAGVqD,EAAaC,OAAbD,SACA5D,EAAY2D,KAAK5D,MAAjBC,QACJ4D,GACFA,EAASE,GAAG,mBAAmB,SAAC1C,GAC1BA,EAAS,KAAOpB,IAClB,EAAKyB,SAAS,CACZzB,QAASoB,EAAS,KAGpB,EAAKb,qB,+BAwIH,IAEAX,EAAS+D,KAAK1C,MAAdrB,KAFD,EAGuD+D,KAAK5D,MAA3DE,EAHD,EAGCA,aAAcG,EAHf,EAGeA,MAAOC,EAHtB,EAGsBA,IAAKH,EAH3B,EAG2BA,QAASC,EAHpC,EAGoCA,OAAQG,EAH5C,EAG4CA,OAE7CyD,EAAUJ,KAAKpB,kBAUrB,OACE,yBAAKW,UAAWC,IAAOa,MACrB,4BAAQd,UAAWC,IAAOc,QACxB,yBAAKC,IAAKC,EAAQ,KAA6BC,IAAI,aAClDT,KAAKV,iBAER,yBAAKC,UAAWC,IAAOkB,SAEnBpE,EACE,0BAAMiD,UAAWC,IAAOmB,MACtB,0BAAMpB,UAAWC,IAAOoB,UACxB,8BAAOtE,IAEP,KAEN,wBAAIiD,UAAWC,IAAOqB,OAClBtE,EAAO,UAAMA,EAAN,YAAiBC,GAAW,IAEvC,yBAAK+C,UAAWC,IAAOsB,UACrB,0BAAMvB,UAAWC,IAAO/C,OACrBuD,KAAKN,iBAAiB,QAASqB,SAAS,IAAIjC,KAAKrC,GAAOsC,UAAW,MAEtE,0BACEQ,UAAWC,IAAOwB,IAClBC,MAAO,CAAEC,KAAK,GAAD,OA7BhBzE,EAEE2D,EAAU,GAAK,GAAKA,EAAU,GAAK,GAAKA,EAF1B,IA6BA,OAEZJ,KAAKN,iBAAiB,MAAOqB,UAAS,IAAIjC,MAAOC,UAAW,MAE/D,0BAAMQ,UAAWC,IAAO9C,KACrBsD,KAAKN,iBAAiB,MAAOqB,SAAS,IAAIjC,KAAKpC,GAAKqC,UAAW,MAElE,yBAAKQ,UAAWC,IAAO2B,KAAMF,MAAO,CAAEG,MAAM,GAAD,OAAKhB,EAAL,SAE7C,4BAAMzD,EAAM,UAAMV,EAAKmC,MAAMC,QAAQ1B,EAAQ,SAAjC,QAAkD,IAC9D,yBAAK4C,UAAWC,IAAO6B,MACrB,4BACEC,QAAStB,KAAKd,iBACdqC,SAAsB,KAAX5E,GAFb,WAQJ,yBAAK4C,UAAWC,IAAOgC,IACrB,4BACE,4BACE,uBAAGjC,UAAWC,IAAOiC,OAArB,gCAAyD,yCAAzD,KACA,uBAAGlC,UAAWC,IAAOkC,OAArB,uCAEF,4BACE,uBAAGnC,UAAWC,IAAOiC,OAArB,0CACA,uBAAGlC,UAAWC,IAAOkC,OAArB,2DAEF,4BACE,uBAAGnC,UAAWC,IAAOiC,OAArB,mEACA,uBAAGlC,UAAWC,IAAOkC,OAArB,oH,GAzOSC,IAAMC,e,OC8BdC,MA3Bf,WAI+B,qBAApB3B,OAAOD,UAChBC,OAAOD,SAAS6B,SAIhB7F,EAAO,IAAI8F,IAAKA,IAAKC,eAErB9F,EAAY,CACV+F,QAAS,IAAIhG,EAAKsB,IAAI2E,SAASC,EAAY,+CAG7C,IAAM7E,EAAQ,CACZrB,OACAC,aAGF,OACE,yBAAKqD,UAAU,OACb,kBAAC,EAAajC,KCnBA8E,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9E,MAAK,SAAA+E,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxF,QAAQwF,MAAMA,EAAMC,c","file":"static/js/main.4958e84e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"styles_home__3Pry2\",\"header\":\"styles_header__1uJyZ\",\"account\":\"styles_account__3HAcN\",\"content\":\"styles_content__TyVSW\",\"node\":\"styles_node__QyzUp\",\"success\":\"styles_success__38IAe\",\"timeline\":\"styles_timeline__2y33b\",\"start\":\"styles_start__2Gijh\",\"now\":\"styles_now__1JQHG\",\"end\":\"styles_end__2IK0_\",\"fill\":\"styles_fill__26uO6\",\"btns\":\"styles_btns__2FILd\",\"qa\":\"styles_qa__2R_Zq\",\"qa__q\":\"styles_qa__q__m6quN\",\"qa__a\":\"styles_qa__a__1z7Ho\"};","module.exports = __webpack_public_path__ + \"static/media/logo_2x.82ac74ba.png\";","import React from 'react';\n\nimport styles from './styles.module.css';\n\nlet timer;\n\nclass HomePage extends React.PureComponent {\n\n  state = {\n    account: '',\n    contractName: '',\n\n    balance: '',\n    symbol: '',\n\n    start: '',\n    end: '',\n\n    reward: '',\n  }\n\n  componentDidMount() {\n    this.initPageData();\n\n    const { ethereum } = window;\n    const { account } = this.state;\n    if (ethereum) {\n      ethereum.on('accountsChanged', (accounts) => {\n        if (accounts[0] !== account) {\n          this.setState({\n            account: accounts[0],\n          });\n          // 重新初始化页面数据\n          this.initPageData();\n        }\n      });\n    }\n  }\n\n  initPageData = () => {\n    this.getAccount();\n    this.getContractName();\n    this.getSymbol();\n    this.getDate();\n  }\n\n\n  pageListen = (account) => {\n    clearInterval(timer);\n    // 定时轮询区块高度\n    timer = setInterval(() => {\n      this.getReward(account);\n    }, 15 * 1000);\n  }\n\n  // 获取当前账户\n  getAccount = async () => {\n    const { web3 } = this.props;\n    // 获取账户\n\t\tlet accounts = await web3.eth.getAccounts();\n\t\tif(accounts.length <= 0) {\n\t\t\tconsole.log('未检测到账户');\n\t\t\treturn;\n\t\t}\n    const account = accounts[0];\n    this.getBalance(account);\n    this.getReward(account);\n    this.setState({\n      account,\n    }, () => {\n      this.pageListen(account);\n    });\n  }\n\n  // 获取合约名称\n  getContractName = async () => {\n    const { contracts } = this.props;\n    contracts['HashBay'].methods.contractName().call().then((contractName) => {\n      this.setState({\n        contractName,\n      });\n    });\n  }\n\n  // 获取 mhash 余额\n  getBalance = async (account) => {\n    const { web3, contracts } = this.props;\n    const res = await contracts['HashBay'].methods.balanceOf(account).call();\n    this.setState({\n      balance: web3.utils.fromWei(res, 'mwei'),\n    });\n  }\n\n  // 获取代币符号\n  getSymbol = async () => {\n    const { contracts } = this.props;\n    const symbol = await contracts['HashBay'].methods.symbol().call();\n    this.setState({\n      symbol,\n    });\n  }\n\n  // 获取合约起止日期\n  getDate = async () => {\n    const { contracts } = this.props;\n    let startDateTime = await contracts['HashBay'].methods.startDate().call();\n    let endDateTime = await contracts['HashBay'].methods.endDate().call();\n    this.setState({\n      start: +startDateTime * 1000,\n      end: +endDateTime * 1000,\n    });\n  }\n\n  // 获取当前收益\n  getReward = async (account) => {\n    const { contracts } = this.props;\n    contracts['HashBay'].methods.myReward().call({\n      from: account\n    }).then((reward) => {\n      this.setState({\n        reward,\n      });\n    });\n  }\n\n  // 计算当前时间进度\n  getTimeSchedule = () => {\n    const { start, end } = this.state;\n    if (!start || !end) { return null }\n    const startTime = new Date(start).getTime();\n    const endTime = new Date(end).getTime();\n    const nowTime = new Date().getTime();\n    const result = +((nowTime - startTime) / (endTime - startTime) * 100).toFixed(2);\n    return result;\n  }\n\n  // 提现\n  handleClickClaim = async () => {\n    const { contracts } = this.props;\n    const { account } = this.state;\n    try {\n      contracts['HashBay'].methods.claim().send({\n        from: account,\n      }).then((res) => {\n        this.initPageData();\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  // 渲染当前用户地址\n  renderAccount = () => {\n    const { account } = this.state;\n    return (\n      <div className={styles.account}>\n        {`${account.substring(0, 10)}...${account.substring(account.length - 10)}`}\n      </div>\n    )\n  }\n\n  // 格式化渲染日期\n  renderTimeFormat = (prefix, timestamp) => {\n    if (!timestamp) { return null }\n    let date = new Date(timestamp).toString();\n    let dateArr = date.split(' ');\n    return `${prefix}: ${dateArr[1]} ${dateArr[2]}`;\n  }\n\n  render() {\n\n    const { web3 } = this.props;\n    const { contractName, start, end, balance, symbol, reward } = this.state;\n\n    const nowLeft = this.getTimeSchedule();\n\n    // 获取当前时间轴偏移位置\n    const getTimeListNowLeft = () => {\n      // 初始时间不存在时，修正偏移量 5.6%\n      if (!start) { return 5.6 }\n      // 最小左边偏移 22%，最大右边偏移 80%\n      return nowLeft < 22 ? 22 : nowLeft > 80 ? 80 : nowLeft;\n    }\n\n    return (\n      <div className={styles.home}>\n        <header className={styles.header}>\n          <img src={require('../../assets/logo_2x.png')} alt=\"hash bay\"/>\n          {this.renderAccount()}\n        </header>\n        <div className={styles.content}>\n          {\n            contractName ? (\n              <span className={styles.node}>\n                <span className={styles.success} />\n                <span>{contractName}</span>\n              </span>\n            ) : null\n          }\n          <h2 className={styles.token}>\n            { balance ? `${balance} ${symbol}` : '' }\n          </h2>\n          <div className={styles.timeline}>\n            <span className={styles.start}>\n              {this.renderTimeFormat('start', parseInt(new Date(start).getTime(), 10))}\n            </span>\n            <span\n              className={styles.now}\n              style={{ left: `${getTimeListNowLeft()}%` }}\n            >\n              {this.renderTimeFormat('now', parseInt(new Date().getTime(), 10))}\n            </span>\n            <span className={styles.end}>\n              {this.renderTimeFormat('end', parseInt(new Date(end).getTime(), 10))}\n            </span>\n            <div className={styles.fill} style={{ width: `${nowLeft}%` }}></div>\n          </div>\n          <h2>{ reward ? `${web3.utils.fromWei(reward, 'ether')} eth` : '' }</h2>\n          <div className={styles.btns}>\n            <button\n              onClick={this.handleClickClaim}\n              disabled={+reward === 0}\n            >\n              CLAIM\n            </button>\n          </div>\n        </div>\n        <div className={styles.qa}>\n          <ul>\n            <li>\n              <p className={styles.qa__q}>What will happen if I do the <strong>CLAIM</strong>?</p>\n              <p className={styles.qa__a}>You will get the cumulative ether.</p>\n            </li>\n            <li>\n              <p className={styles.qa__q}>What will happen if I do the TRANSFER?</p>\n              <p className={styles.qa__a}>You will give the right of mining to the one you give.</p>\n            </li>\n            <li>\n              <p className={styles.qa__q}>Will I lose my cumulative ether when I transfer my MHASH token?</p>\n              <p className={styles.qa__a}>NO. You will keep your cumulative ether. But you will lose the right to earn the\nfuture mining benefits.</p>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default HomePage;\n","import React from 'react';\nimport Web3 from 'web3';\n\nimport HashBayAbi from './abi/HashBay.json';\nimport HomePage from './pages/home';\nimport './App.css';\n\nlet web3, contracts;\n\nfunction App() {\n\n\n\t// 请求 Metamask 授权\n\tif(typeof window.ethereum !== 'undefined') {\n\t\twindow.ethereum.enable();\n\t}\n\n  // 初始化\n  web3 = new Web3(Web3.givenProvider);\n\n  contracts = {\n    HashBay: new web3.eth.Contract(HashBayAbi, \"0x4986a9b27b62090222b2474b391fb6cf18538705\"),\n  };\n\n  const props = {\n    web3,\n    contracts,\n  };\n\n  return (\n    <div className=\"App\">\n      <HomePage {...props} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}